(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{nFsR:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return s})),t.d(a,"default",(function(){return r}));t("E5k/"),t("rzGZ"),t("Dq+y"),t("8npG"),t("Ggvi"),t("FdF9");var n=t("7ljp"),c=t("7oih");t("qKvR");function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}var s={},p={_frontmatter:s},b=c.a;function r(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,["components"]);return Object(n.b)(b,o({},p,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"detect-overflow",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h1"},{href:"#detect-overflow","aria-label":"detect overflow permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Detect Overflow"),Object(n.b)("p",null,"The ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"detectOverflow")," utility returns an object of overflow offsets of the popper\nor reference element relative to a given boundary."),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"import")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{")," detectOverflow ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"from")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'@popperjs/core'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"const")," overflow ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," options",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("p",null,"You can use this utility within your own custom modifiers."),Object(n.b)("x-ad",null),Object(n.b)("h2",{id:"state",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h2"},{href:"#state","aria-label":"state permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"State"),Object(n.b)("p",null,"The first argument is the popper instance state that gets passed in to\nmodifiers."),Object(n.b)("h2",{id:"options",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h2"},{href:"#options","aria-label":"options permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Options"),Object(n.b)("div",{className:"gatsby-highlight","data-language":"flow"},Object(n.b)("pre",o({parentName:"div"},{className:"language-flow"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-flow"}),Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"type")," Options ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  placement",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," Placement",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// state.placement"),"\n  elementContext",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," Context",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),'// "popper"'),"\n  boundary",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," Boundary",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),'// "clippingParents"'),"\n  rootBoundary",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," RootBoundary",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),'// "viewport"'),"\n  altBoundary",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"boolean"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// false"),"\n  padding",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," Padding",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// 0"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// Below are the relative types"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"type")," Context ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'reference'")," ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"|")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'popper'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"type")," Boundary ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'clippingParents'")," ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"|")," HTMLElement ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"|")," Array",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"<"),"HTMLElement",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),">"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"type")," RootBoundary ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'document'")," ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"|")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'viewport'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"type")," Padding ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"="),"\n  ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"|")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),"\n  ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"|")," ",Object(n.b)("span",o({parentName:"code"},{className:"token flow-punctuation punctuation"}),"{|"),"\n      top",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"?"),Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n      right",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"?"),Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n      bottom",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"?"),Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n      left",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"?"),Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(n.b)("span",o({parentName:"code"},{className:"token flow-punctuation punctuation"}),"|}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h3",{id:"placement",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h3"},{href:"#placement","aria-label":"placement permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),Object(n.b)("code",o({parentName:"h3"},{className:"language-text"}),"placement")),Object(n.b)("p",null,"This will check the overflow when the popper is given this placement. By\ndefault, it's ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"state.placement"),"."),Object(n.b)("h3",{id:"elementcontext",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h3"},{href:"#elementcontext","aria-label":"elementcontext permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),Object(n.b)("code",o({parentName:"h3"},{className:"language-text"}),"elementContext")),Object(n.b)("p",null,"This describes the element that is being checked for overflow relative to the\nboundary."),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  elementContext",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'reference'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// 'popper' by default"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h3",{id:"boundary",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h3"},{href:"#boundary","aria-label":"boundary permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),Object(n.b)("code",o({parentName:"h3"},{className:"language-text"}),"boundary")),Object(n.b)("p",null,"This describes the area that the element will be checked for overflow relative\nto."),Object(n.b)("p",null,"By default, it is ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),'"clippingParents"'),", which are the scrolling containers that\nmay cause the element to be partially or fully cut off."),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"const")," customBoundary ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," document",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"."),Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"querySelector"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'#boundary'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  boundary",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," customBoundary",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// 'clippingParents' by default"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h3",{id:"rootboundary",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h3"},{href:"#rootboundary","aria-label":"rootboundary permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),Object(n.b)("code",o({parentName:"h3"},{className:"language-text"}),"rootBoundary")),Object(n.b)("p",null,'This describes the root boundary that will be checked for overflow. There are\nonly two "roots" – the viewport and the document. ',Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),'"viewport"')," is default, which\nis the area of the document the user can actually see on the screen.\n",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),'"document"')," is the entire page which can be potentially scrolled."),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  rootBoundary",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'document'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// 'viewport' by default"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h3",{id:"altboundary",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h3"},{href:"#altboundary","aria-label":"altboundary permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),Object(n.b)("code",o({parentName:"h3"},{className:"language-text"}),"altBoundary")),Object(n.b)("p",null,"This describes whether to use the alt element's boundary. For example, if the\n",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"elementContext")," is ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),'"popper"'),", then it will check the reference's boundary\ncontext, and vice-versa."),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  altBoundary",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token boolean"}),"true"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// false by default"),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h3",{id:"padding",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h3"},{href:"#padding","aria-label":"padding permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),Object(n.b)("code",o({parentName:"h3"},{className:"language-text"}),"padding")),Object(n.b)("p",null,"Applies virtual padding to the boundary."),Object(n.b)("p",null,"You can pass a ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"number"),", which will be equal padding on all four sides, or an\n",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"object")," containing side properties each with their own padding value."),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// Same padding on all four sides"),"\n  padding",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token number"}),"8"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// Different padding on certain sides – unspecified sides are 0"),"\n  padding",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{")," top",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token number"}),"8"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),",")," right",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token number"}),"16")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h2",{id:"return-value",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h2"},{href:"#return-value","aria-label":"return value permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Return value"),Object(n.b)("div",{className:"gatsby-highlight","data-language":"flow"},Object(n.b)("pre",o({parentName:"div"},{className:"language-flow"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-flow"}),Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// If the number is positive, the popper is overflowing by that number of pixels."),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// When 0, or negative, the popper is within its boundaries."),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"type")," OverflowOffsets ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  top",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  bottom",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  right",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  left",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token type tag"}),"number"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("h2",{id:"example",style:{position:"relative"}},Object(n.b)("a",o({parentName:"h2"},{href:"#example","aria-label":"example permalink",className:"gatsby-link-icon before"}),Object(n.b)("svg",o({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(n.b)("path",o({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Example"),Object(n.b)("p",null,"For your custom modifiers, ensure you add ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),'"offset"')," to ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"requiresIfExists"),", as\nthe util needs to have access to this information if ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"offset")," exists in the\nmodifier lifecycle:"),Object(n.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(n.b)("pre",o({parentName:"div"},{className:"language-js"}),Object(n.b)("code",o({parentName:"pre"},{className:"language-js"}),Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"import")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{")," detectOverflow ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"from")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'@popperjs/core'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"const")," myModifier ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n  name",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'myModifier'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  enabled",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token boolean"}),"true"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  phase",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'main'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  requiresIfExists",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),":")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"["),Object(n.b)("span",o({parentName:"code"},{className:"token string"}),"'offset'"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"]"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"fn"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(n.b)("span",o({parentName:"code"},{className:"token parameter"}),Object(n.b)("span",o({parentName:"span"},{className:"token punctuation"}),"{")," state ",Object(n.b)("span",o({parentName:"span"},{className:"token punctuation"}),"}")),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")")," ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(n.b)("span",o({parentName:"code"},{className:"token keyword"}),"const")," overflow ",Object(n.b)("span",o({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.b)("span",o({parentName:"code"},{className:"token function"}),"detectOverflow"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(n.b)("span",o({parentName:"code"},{className:"token comment"}),"// ..."),"\n  ",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}"),Object(n.b)("span",o({parentName:"code"},{className:"token punctuation"}),";")))),Object(n.b)("p",null,Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"detectOverflow")," only considers the ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"offset")," modifier by default and reports\nvalues as though no other modifier is currently affecting it. This means if\n",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"preventOverflow")," is enabled, its values should be taken into account\n(",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"state.modifiersData.preventOverflow"),"), along with any other potential modifier\nthat alters ",Object(n.b)("code",o({parentName:"p"},{className:"language-text"}),"popperOffsets"),"."))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-v-2-utils-detect-overflow-mdx-eafc6a927df7e38e9f40.js.map